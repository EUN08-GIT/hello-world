딕셔너리를 먼저 보여줘서 먼저 이해 할 수 있게 설명
ora_hash 함수써서 설명
해시 원리 보여주고


해시함수로 해시테이블을 만들때
버킷수가 작으면 각각 다른 데이터가 같은 버킷에 들어가 충돌이 날 수 있음 이걸 hash collision이라고 함
이때, 옵티마이저는 체이닝 또는 오픈 어드레싱 중 하나를 택해서 처리하는데
대부분 체이닝을 통해 처리함
체이닝은 가령 1번 버킷에 clerk가 들어갔는데 salesman의 해싱값도 1번이 나올 수 있음
이럴때 같은 버킷에 들어온 여러 값을 리스트형태로 저장하는 방식
버킷 번호	저장된 값
0	CLERK → SALESMAN
1	MANAGER
2	—
3	ANALYST
4	PRESIDENT

오픈 어드레싱은 충돌이 발생했을때 해시 테이블에서 빈 버킷을 찾아 옮기는 방식
이 방식은 한 버킷에 오직 하나의 값만 저장되고 충돌이 나면 다른 위치로 옮긴다

<선형탐사 예시>
버킷 번호	저장된 값
0	CLERK
1	SALESMAN (원래는 0번이지만 충돌로 1번에 저장)
2	—
3	MANAGER
4	—

방식	설명
선형 탐사 (Linear Probing)	충돌 시 1칸씩 다음 위치로 이동
이차 탐사 (Quadratic Probing)	1, 4, 9, 16... 식으로 점점 멀리 이동
이중 해싱 (Double Hashing)	다른 해시 함수를 이용해 이동 거리 결정

이 해싱 충돌 시 처리는 전적으로 오라클이 알아서 해주기때문에 우리는 그냥 SQL만 작성하면 되고, 충돌처리는 오라클의 몫

1.job 컬럼 값을 하나씩 읽음

2.각 값에 대해 해시값 생성 (ORA_HASH와 유사한 방식)

3.해시 테이블에서 해당 해시값이 이미 있는지 확인 
ㄴ 있으면 → 해당 버킷의 리스트에 중복 체크 후 무시 
ㄴ 없으면 → 새로운 엔트리 추가


4.모든 데이터를 읽은 뒤 → 버킷 순서대로 결과 출력 (정렬 X)


